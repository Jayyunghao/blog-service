#! /bin/sh
# 用户修改内容
readonly G_SBIN_DIR=`pwd`
readonly G_PROC_NAME="${G_SBIN_DIR}/blog-service"
readonly G_SUPERVISE_NAME='supervise.blog-service'
#命令定义
readonly SLEEP='sleep'
check()
{
    ps -fj ax | grep "${G_PROC_NAME}"| grep -v 'grep' >/dev/null 2>&1
    ret1=$?
    ps -fj ax | grep "${G_SUPERVISE_NAME}"| grep -v 'grep' >/dev/null 2>&1
    ret2=$?
    if [ ${ret1} -eq 0 ] && [ ${ret2} -eq 0 ]; then
      return 0
    else
      return 1
    fi
}

help()
{
    echo "${0} <start|stop|restart|status>"
    exit 1
}

die()
{
    echo "[FAILED] ${1}"
    exit 1
}

ok()
{
    echo "[OK] ${1}"
}

signal()
{
    #killall -9 ${G_SUPERVISE_NAME}
    supervise_possible_id=`pidof -x ${G_SUPERVISE_NAME}`
    for supervise_id in $supervise_possible_id
    do
        kill -9 ${supervise_id}
        if [ $? -ne 0 ];then
            echo "[FAILED] kill ${supervise_id} error"
        fi
    done

    all_possible_id=`ps aux | grep "${G_PROC_NAME}" | grep -v 'grep' | \
                     awk '{print $2}'`
    for proc_id in $all_possible_id
    do
        kill -9 ${proc_id}
        if [ $? -ne 0 ];then
            echo "[FAILED] kill ${proc_id} error"
        fi
    done
}

start()
{
    check
    if [ $? -eq 0 ]; then
        ok "start"
        return 0
    fi

    #start programe now
    (setsid ./${G_SUPERVISE_NAME} >/dev/null 2>&1 &)
    ${SLEEP} 1
    check || die "start"
    ok "start"
    return 0
}

stop()
{
    for i in 1 2 3 4 5; do
        signal
        ${SLEEP} 1
        check
        if [ $? -ne 0 ]; then
            ok "stop"
            return 0
        fi
    done
    die "stop"
}

restart()
{
    stop
    start
    return 0
}

status()
{
    check
    if [ $? -eq 0 ]; then
        echo 'Running'
        return 0
    else
        echo 'Not running'
        return 1
    fi
}




case "${1}" in
start)
    start
    ;;
stop)
    stop
    ;;
restart)
    restart
    ;;
status)
    status
    ;;
*)
    help
    ;;
esac

